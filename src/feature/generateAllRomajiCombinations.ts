const romajiMapping: { [key: string]: string[] } = {
  あ: ["a"],
  い: ["i"],
  う: ["u"],
  え: ["e"],
  お: ["o"],
  か: ["ka"],
  き: ["ki"],
  く: ["ku"],
  け: ["ke"],
  こ: ["ko"],
  さ: ["sa"],
  し: ["shi", "si"],
  す: ["su"],
  せ: ["se"],
  そ: ["so"],
  た: ["ta"],
  ち: ["chi", "ti"],
  つ: ["tsu", "tu"],
  て: ["te"],
  と: ["to"],
  な: ["na"],
  に: ["ni"],
  ぬ: ["nu"],
  ね: ["ne"],
  の: ["no"],
  は: ["ha", "wa"],
  ひ: ["hi"],
  ふ: ["fu", "hu"],
  へ: ["he"],
  ほ: ["ho"],
  ま: ["ma"],
  み: ["mi"],
  む: ["mu"],
  め: ["me"],
  も: ["mo"],
  や: ["ya"],
  ゆ: ["yu"],
  よ: ["yo"],
  ら: ["ra"],
  り: ["ri"],
  る: ["ru"],
  れ: ["re"],
  ろ: ["ro"],
  わ: ["wa", "ha"],
  を: ["wo", "o"],
  ん: ["n", "nn"],
  が: ["ga"],
  ぎ: ["gi"],
  ぐ: ["gu"],
  げ: ["ge"],
  ご: ["go"],
  ざ: ["za"],
  じ: ["ji", "zi"],
  ず: ["zu"],
  ぜ: ["ze"],
  ぞ: ["zo"],
  だ: ["da"],
  ぢ: ["ji", "di"],
  づ: ["zu", "du"],
  で: ["de"],
  ど: ["do"],
  ば: ["ba"],
  び: ["bi"],
  ぶ: ["bu"],
  べ: ["be"],
  ぼ: ["bo"],
  ぱ: ["pa"],
  ぴ: ["pi"],
  ぷ: ["pu"],
  ぺ: ["pe"],
  ぽ: ["po"],
  きゃ: ["kya"],
  きゅ: ["kyu"],
  きょ: ["kyo"],
  しゃ: ["sha", "sya"],
  しゅ: ["shu", "syu"],
  しょ: ["sho", "syo"],
  ちゃ: ["cha", "tya"],
  ちゅ: ["chu", "tyu"],
  ちょ: ["cho", "tyo"],
  にゃ: ["nya"],
  にゅ: ["nyu"],
  にょ: ["nyo"],
  ひゃ: ["hya"],
  ひゅ: ["hyu"],
  ひょ: ["hyo"],
  みゃ: ["mya"],
  みゅ: ["myu"],
  みょ: ["myo"],
  りゃ: ["rya"],
  りゅ: ["ryu"],
  りょ: ["ryo"],
  ぎゃ: ["gya"],
  ぎゅ: ["gyu"],
  ぎょ: ["gyo"],
  じゃ: ["ja", "jya", "zya"],
  じゅ: ["ju", "jyu", "zyu"],
  じぇ: ["je", "jye", "zye"],
  じょ: ["jo", "jyo", "zyo"],
  びゃ: ["bya"],
  びゅ: ["byu"],
  びょ: ["byo"],
  ぴゃ: ["pya"],
  ぴゅ: ["pyu"],
  ぴょ: ["pyo"],
  っか: ["kka"],
  っき: ["kki"],
  っく: ["kku"],
  っけ: ["kke"],
  っこ: ["kko"],
  っさ: ["ssa"],
  っし: ["sshi", "ssi"],
  っす: ["ssu"],
  っせ: ["sse"],
  っそ: ["sso"],
  った: ["tta"],
  っち: ["cchi", "tti"],
  っつ: ["ttsu", "ttu"],
  って: ["tte"],
  っと: ["tto"],
  っぱ: ["ppa"],
  っぴ: ["ppi"],
  っぷ: ["ppu"],
  っぺ: ["ppe"],
  っぽ: ["ppo"],
  っが: ["gga"],
  っぎ: ["ggi"],
  っぐ: ["ggu"],
  っげ: ["gge"],
  っご: ["ggo"],
  っざ: ["zza"],
  っじ: ["jji", "zzi"],
  っず: ["zzu"],
  っぜ: ["zze"],
  っぞ: ["zzo"],
  っだ: ["dda"],
  っぢ: ["ddi"],
  っづ: ["ddu"],
  っで: ["dde"],
  っど: ["ddo"],
  っば: ["bba"],
  っび: ["bbi"],
  っぶ: ["bbu"],
  っべ: ["bbe"],
  っぼ: ["bbo"],
  っ: ["ltu", "xtu", "ltsu"],
  ー: ["-"], // 長音記号
  ああ: ["aa"],
  いい: ["ii"],
  うう: ["uu"],
  ええ: ["ee"],
  おお: ["oo", "ou"],
  ぁ: ["xa", "la"],
  ぃ: ["xi", "li"],
  ぅ: ["xu", "lu"],
  ぇ: ["xe", "le"],
  ぉ: ["xo", "lo"],
  てぃ: ["ti", "tei"],
  きぃ: ["kyi"],
  しぃ: ["syi", "shi"],
  ちぃ: ["cyi", "chi"],
  にぃ: ["nyi"],
  ひぃ: ["hyi"],
  みぃ: ["myi"],
  りぃ: ["ryi"],
  ぎぃ: ["gyi"],
  じぃ: ["jyi", "zyi"],
  びぃ: ["byi"],
  ぴぃ: ["pyi"],
  ふぁ: ["fa"],
  ふぃ: ["fi"],
  ふぇ: ["fe"],
  ふぉ: ["fo"],
  うぁ: ["wha"],
  うぃ: ["wi"],
  うぇ: ["we"],
  うぉ: ["who"],
  くぁ: ["kwa"],
  ぐぁ: ["gwa"],
  "、": [","],
  "。": ["."],
  // 促音と拗音の組み合わせ
  っちゃ: ["ccha", "tcha"],
  っちゅ: ["cchu", "tchu"],
  っちょ: ["ccho", "tcho"],
  っぢゃ: ["ddya"],
  っぢゅ: ["ddyu"],
  っぢょ: ["ddyo"],
  っふぁ: ["ffa"],
  っふぃ: ["ffi"],
  っふぇ: ["ffe"],
  っふぉ: ["ffo"],
  っきゃ: ["kkya"],
  っきゅ: ["kkyu"],
  っきょ: ["kkyo"],
  っしゃ: ["ssha"],
  っしゅ: ["sshu"],
  っしょ: ["ssho"],
  っじょ: ["jjo", "zzyo"],
  っちぇ: ["cche", "tche"],
  っつぁ: ["ttsa"],
  っつぃ: ["ttsi"],
  っつぇ: ["ttse"],
  っつぉ: ["ttso"],
  っふゃ: ["ffya"],
  っふゅ: ["ffyu"],
  っふょ: ["ffyo"],
  っぎゃ: ["ggya"],
  っぎゅ: ["ggyu"],
  っぎょ: ["ggyo"],
  っじゃ: ["jja", "zzya"],
  っじゅ: ["jju", "zzyu"],
  っじぇ: ["jje", "zzye"],
  っびゃ: ["bbya"],
  っびゅ: ["bbyu"],
  っびょ: ["bbyo"],
  っぴゃ: ["ppya"],
  っぴゅ: ["ppyu"],
  っぴょ: ["ppyo"],
  っくぁ: ["kkwa"],
  っぐぁ: ["ggwa"],
  っとぅ: ["ttu"],
  っふぅ: ["ffu"],
  っゔぁ: ["vva"],
  っゔぃ: ["vvi"],
  っゔぇ: ["vve"],
  っゔぉ: ["vvo"],
  っゔゃ: ["vva"],
  っゔゅ: ["vvu"],
  っゔょ: ["vvo"],
  ゃ: ["xya", "lya"],
  ゅ: ["xyu", "lyu"],
  ょ: ["xyo", "lyo"],
  "！": ["!"],
  "？": ["?"],
};

// キーを長い順にソートする
const sortedKeys = Object.keys(romajiMapping).sort(
  (a, b) => b.length - a.length
);

export const generateAllRomajiCombinations = (japanese: string): string[] => {
  function combine(prefix: string, remaining: string): string[] {
    if (remaining.length === 0) {
      return [prefix];
    }

    let results: string[] = [];
    let matched = false;

    for (const key of sortedKeys) {
      if (remaining.startsWith(key)) {
        matched = true;
        for (const romaji of romajiMapping[key]) {
          results = results.concat(
            combine(prefix + romaji, remaining.slice(key.length))
          );
        }
      }
    }

    if (!matched) {
      results = results.concat(
        combine(prefix + remaining[0], remaining.slice(1))
      );
    }

    return results;
  }

  return combine("", japanese);
};
